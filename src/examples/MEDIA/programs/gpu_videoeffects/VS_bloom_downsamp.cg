#include "uniforms.cg"

const float  nsamples = 7;
const float2 direction = { 1, 1 };

///////////////////////////////////////////////////////////
/////////////////////////////////// data structures ///////
///////////////////////////////////////////////////////////

struct VS_OUTPUT_BLUR
{
    float4 Position   : POSITION;
    float2 TexCoord[8]: TEXCOORD0;
};

struct VS_OUTPUT
{
   	float4 Position   : POSITION;
    float2 TexCoord0  : TEXCOORD0;
    float2 TexCoord1  : TEXCOORD1;
};

struct VS_OUTPUT_DOWNSAMPLE
{
    float4 Position   : POSITION;
    float2 TexCoord[4]: TEXCOORD0;
};

// generate texture coordinates to sample 4 neighbours
VS_OUTPUT_DOWNSAMPLE main(	float4 Position : POSITION,
							float2 TexCoord : TEXCOORD0 )
{
	VS_OUTPUT_DOWNSAMPLE OUT;
	float2 texelSize = DownsampleScale / winsize;
	float2 s = TexCoord / texsize;

	OUT.Position = Position;
	OUT.TexCoord[0] = s;
	OUT.TexCoord[1] = s + float2(2, 0)*texelSize;
	OUT.TexCoord[2] = s + float2(2, 2)*texelSize;
	OUT.TexCoord[3] = s + float2(0, 2)*texelSize;	

	return OUT;
}
