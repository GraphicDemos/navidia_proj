/*--------------------------------------------------------------------- NVMH5 -|----------------------
Path:  Sdk\Media\programs\D3D9_FogPolygonVolumes3\
File:  RGBDifferenceToFogColor_13.nvp

Copyright NVIDIA Corporation 2003
TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THIS SOFTWARE IS PROVIDED *AS IS* AND NVIDIA AND
AND ITS SUPPLIERS DISCLAIM ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL NVIDIA
OR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER
INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF
BUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS) ARISING OUT OF THE USE OF OR INABILITY TO USE THIS
SOFTWARE, EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.


Comments:
Converts RGB-encoded value to a single floating point texture coordinate
value using texture address operations

RGB value comes from texture and is in biased range, so must be 
un-biased to the [-1,1] range first.  The _bx2 modifier does this
as the texture is read in.

t0_bx2 = ( t0 - 0.5 ) * 2
t0_bias = t0 - 0.5

-------------------------------------------------------------------------------|--------------------*/

#include "Constants.h"

ps.1.1
tex			t0				// Depth difference, _bias to convert to -1,1 range

// Should use _bias here instead of _bx2, but D3D prevents that.
// Only _bx2 can be used, so the solution is to divide the texture coordinates 
// by 2.0f.

texm3x2pad	t1, t0_bx2		// only the 1st DP3 result matters in this case
texm3x2tex	t2, t0_bx2

mov		r0, t2

// The texdp3tex  -- 1D dot product operation -- 
// available on ps.1.3 hardware (but not ps.1.1 HW (GF3))
// could be used instead.
//
//ps.1.3
//
//tex			t0
//texdp3tex	t1, t0_bias		// Convert to scalar texcoord & perform the lookup
//
//mov			r0, t1

