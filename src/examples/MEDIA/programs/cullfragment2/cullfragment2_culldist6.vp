!!ARBvp1.0
# This vertex program sets texture coordinates equal to a minimum distance to 6 points.
# c[0]...c[3] contains the concatenation of the modelview and projection matrices.
# c[4]...c[7] contains the modelview matrix.
# c[8]...c[11] contains the inverse transpose of the modelview matrix.
# c[12]       contains ( radius, radius, radius, radius ).
# c[13]       contains ( 0.0, 0.5, 1.0, 2.0 )

TEMP R0, R1, R2, R3, R4, R5, R6, R7;

ATTRIB v0 = vertex.position;
ATTRIB v2 = vertex.normal;
ATTRIB v3 = vertex.color;

PARAM mvp[4] = { state.matrix.mvp };
PARAM m[4] = { state.matrix.modelview };
PARAM mit[4] = { state.matrix.modelview.invtrans };
PARAM c12 = program.env[12];
PARAM c13 = program.env[13];
PARAM c14 = program.env[14];
PARAM c15 = program.env[15];
PARAM c16 = program.env[16];
PARAM c17 = program.env[17];
PARAM c18 = program.env[18];
PARAM c19 = program.env[19];

DP4 result.position.x, mvp[0], v0;
DP4 result.position.y, mvp[1], v0;
DP4 result.position.z, mvp[2], v0;
DP4 result.position.w, mvp[3], v0;

# Compute the camera space position.
DP4   R0.x, m[0], v0;
DP4   R0.y, m[1], v0;
DP4   R0.z, m[2], v0;

# Compute vector from point to vertex.
# Then compute the magnitude.
ADD   R6, R0, -c14;
DP3   R7.x, R6, R6;

ADD   R6, R0, -c15;
DP3   R7.y, R6, R6;

MIN   R7.x, R7.x, R7.y;

ADD   R6, R0, -c16;
DP3   R7.y, R6, R6;

MIN   R7.x, R7.x, R7.y;

ADD   R6, R0, -c17;
DP3   R7.y, R6, R6;

MIN   R7, R7.x, R7.y;

ADD   R6, R0, -c18;
DP3   R7.y, R6, R6;

MIN   R7, R7.x, R7.y;

ADD   R6, R0, -c19;
DP3   R7.y, R6, R6;

MIN   R7, R7.x, R7.y;

ADD   R7, R7, -c12.x;
MOV   result.texcoord[0], R7;


# R1 = normalized eye vector in camera space.
DP3   R1, R0, R0;
RSQ   R1, R1.x;
MUL   R1, R1.x, -R0;

# R0 = the normal in camera space.
DP3   R0.x,  mit[0], v2;
DP3   R0.y,  mit[1], v2;
DP3   R0.z,  mit[2], v2;

# Now, rescale to account for scaling (uniform or non-uniform).
# R0 = normalized normal in camera space.
DP3   R2, R0, R0;
RSQ   R2, R2.x;
MUL   R0, R2.x, R0;

# Compute N dot E.
DP3   R2, R0, R1;
SLT   R1.x, R2.x, c13.x;
SGE   R1.y, R2.x, c13.x;

MUL   R3, c13.y, -R2;
MUL   R4, v3, R2;

MUL   R5, R3, R1.x;
MAD   result.color.primary, R4, R1.y, R3;

END
