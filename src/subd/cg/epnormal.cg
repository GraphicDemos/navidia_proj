// epnormal.cg

// This shader calculates 2 tangent values at an extraordnary point and
// computes the normal as their cross product

float4 main(
    float4 position : WPOS,
    float4 srcCoord : TEX0,
    float4 w1 : TEX1,
    float4 w2 : TEX2,
    float4 w3 : TEX3,
    float4 w4 : TEX4,
    uniform samplerRECT srcTexMap : TEXUNIT0) : COL
{
    float2 sCoord = position.xy + float2(0, 1);
    float4 t1, t2;

    t1 =
        w1.x * texRECT(srcTexMap, sCoord + float2(0, 1)) +
        w1.y * texRECT(srcTexMap, sCoord + float2(0, 2)) +
        w1.z * texRECT(srcTexMap, sCoord + float2(0, 3)) +
        w1.w * texRECT(srcTexMap, sCoord + float2(0, 4));
    t1 += 
        w2.x * texRECT(srcTexMap, sCoord + float2(0, 5)) +
        w2.y * texRECT(srcTexMap, sCoord + float2(0, 6)) +
        w2.z * texRECT(srcTexMap, sCoord + float2(0, 7)) +
        w2.w * texRECT(srcTexMap, sCoord + float2(0, 8));
    t1 += 
        w3.x * texRECT(srcTexMap, sCoord + float2(0, 9)) +
        w3.y * texRECT(srcTexMap, sCoord + float2(0, 10)) +
        w3.z * texRECT(srcTexMap, sCoord + float2(0, 11)) +
        w3.w * texRECT(srcTexMap, sCoord + float2(0, 12));
    t1 += 
        w4.x * texRECT(srcTexMap, sCoord + float2(0, 13)) +
        w4.y * texRECT(srcTexMap, sCoord + float2(0, 14)) +
        w4.z * texRECT(srcTexMap, sCoord + float2(0, 15)) +
        w4.w * texRECT(srcTexMap, sCoord + float2(0, 16));

    t2 =
        w1.x * texRECT(srcTexMap, sCoord + float2(0, srcCoord.z)) +
        w1.y * texRECT(srcTexMap, sCoord + float2(0, 1)) +
        w1.z * texRECT(srcTexMap, sCoord + float2(0, 2)) +
        w1.w * texRECT(srcTexMap, sCoord + float2(0, 3));
    t2 += 
        w2.x * texRECT(srcTexMap, sCoord + float2(0, 4)) +
        w2.y * texRECT(srcTexMap, sCoord + float2(0, 5)) +
        w2.z * texRECT(srcTexMap, sCoord + float2(0, 6)) +
        w2.w * texRECT(srcTexMap, sCoord + float2(0, 7));
    t2 += 
        w3.x * texRECT(srcTexMap, sCoord + float2(0, srcCoord.w)) +
        w3.y * texRECT(srcTexMap, sCoord + float2(0, 9)) +
        w3.z * texRECT(srcTexMap, sCoord + float2(0, 10)) +
        w3.w * texRECT(srcTexMap, sCoord + float2(0, 11));
    t2 += 
        w4.x * texRECT(srcTexMap, sCoord + float2(0, 12)) +
        w4.y * texRECT(srcTexMap, sCoord + float2(0, 13)) +
        w4.z * texRECT(srcTexMap, sCoord + float2(0, 14)) +
        w4.w * texRECT(srcTexMap, sCoord + float2(0, 15));

    return normalize(cross(t2.xyz, t1.xyz)).xyzx;
}
