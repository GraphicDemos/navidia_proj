PROJECT(nv_PBuffer)

SET(NV_PBUFFER_SRCS
    PBuffer.h 
	PBuffer.cpp)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
IF(GLEW_FOUND)
	INCLUDE_DIRECTORIES(${GLEW_INCLUDE_PATH})
ELSE(GLEW_FOUND)
	INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../extern/glew/include)
ENDIF(GLEW_FOUND)

INCLUDE_DIRECTORIES(${GLUT_INCLUDE_DIR})

# targets
ADD_DEFINITIONS(-DNV_PBUFFER_EXPORTS)

IF(NV_PBUFFER_SHARED)
    ADD_DEFINITIONS(-DNV_PBUFFER_DLL=1)
    ADD_LIBRARY(nv_PBuffer SHARED ${NV_PBUFFER_SRCS})
ELSE(NV_PBUFFER_SHARED)
    ADD_LIBRARY(nv_PBuffer ${NV_PBUFFER_SRCS})
ENDIF(NV_PBUFFER_SHARED)

TARGET_LINK_LIBRARIES(nv_PBuffer ${LIBS} ${GLEW_LIBRARY} ${GLUT_glut_LIBRARY})
INSTALL(TARGETS nv_PBuffer
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib/static)
INSTALL(FILES PBuffer.h DESTINATION include/nv_PBuffer)