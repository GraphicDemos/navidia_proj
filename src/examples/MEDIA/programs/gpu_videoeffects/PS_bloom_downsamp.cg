#include "uniforms.cg"
#include "yuyv.cg"

///////////////////////////////////////////////////////////
/////////////////////////////////// data structures ///////
///////////////////////////////////////////////////////////

struct VS_OUTPUT_BLUR
{
    float4 Position   : POSITION;
    float2 TexCoord[8]: TEXCOORD0;
};

struct VS_OUTPUT
{
   	float4 Position   : POSITION;
    float2 TexCoord0  : TEXCOORD0;
    float2 TexCoord1  : TEXCOORD1;
};

struct VS_OUTPUT_DOWNSAMPLE
{
    float4 Position   : POSITION;
    float2 TexCoord[4]: TEXCOORD0;
};

// function declarations
float luminance(half3 c)
{
	return dot( c, half3(0.3, 0.59, 0.11) );
}

// this function should be baked into a texture lookup for performance
float highlights(half3 c)
{
	return smoothstep(HighlightThreshold, 1.0, luminance(c.rgb));
}

half4 main (VS_OUTPUT_DOWNSAMPLE IN,
			uniform samplerRECT DownsampleTex) : COLOR
{
	half4 c;

	// box filter
	c  = texRECT(DownsampleTex, IN.TexCoord[0]*texsize) * 0.25;
	c += texRECT(DownsampleTex, IN.TexCoord[1]*texsize) * 0.25;
	c += texRECT(DownsampleTex, IN.TexCoord[2]*texsize) * 0.25;
	c += texRECT(DownsampleTex, IN.TexCoord[3]*texsize) * 0.25;

	// store highlights into alpha
	c.a = highlights(c.rgb);

	return c;
}
